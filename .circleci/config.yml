# Elixir CircleCI 2.0 configuration file
#
defaults: &defaults
  parallelism: 1  # run only one instance of this job in parallel

  #working_directory: ~/app   # directory where steps will run

  docker:  # run the steps with Docker
    - image: circleci/elixir:1.7.3  # ...with this image as the primary container; this is where all `steps` will run
      environment:  # environment variables for primary container
        MIX_ENV: test
    # database image
    - image: circleci/postgres:10.4-alpine-postgis-ram
  

# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
    
  test: 
    <<: *defaults
    steps: 
      - checkout 

      - run: mix local.hex --force  # install Hex locally (without prompt)
      - run: mix local.rebar --force  # fetch a copy of rebar (without prompt)

      - restore_cache:  # restores saved mix cache for the deps folder
          keys:  # list of cache keys, in decreasing specificity
            - v1-mix-cache-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:  # restores saved build cache
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache

      - run:  # special utility that stalls main process until DB is ready
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: mix do deps.get, compile  # get updated dependencies & compile them

      - save_cache:  # generate and store cache so `restore_cache` works for the deps folder
         key: v1-mix-cache-{{ checksum "mix.lock" }}
         paths: "deps"

      - save_cache:  # make another less specific cache
         key: v1-mix-cache-{{ .Branch }}
         paths: "deps"

      - save_cache:  # you should really save one more cache just in case
         key: v1-mix-cache
         paths: "deps"

      - save_cache: # don't forget to save a *build* cache, too
         key: v1-build-cache-{{ .Branch }}
         paths: "_build"

      - save_cache: # and one more build cache for good measure
         key: v1-build-cache
         paths: "_build"

      - run: mix ecto.create
      - run: mix ecto.migrate
      - run: mix test # run all tests in project

workflows:
  version: 2
  run-test:
    jobs:
      - test:
          filters:
            branches:
              only: master
